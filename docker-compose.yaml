services:
  # Backend API service
  backend:
    networks:
      - default
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: getting-started-backend
    expose:
      - "3000"
    environment:
      HOST: "0.0.0.0"
      PORT: 3000
      MYSQL_HOST: db
      MYSQL_USER: todos_user
      MYSQL_PASSWORD: todos_password
      MYSQL_DB: todos_db
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  # Frontend service serving static files
  frontend:
    networks:
      - default
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: getting-started-frontend
    ports:
      - "8080:80"
    environment:
      - API_URL=http://backend:3000
    depends_on:
      - backend

  # MySQL database service
  db:
    build:
      context: .
      dockerfile: Dockerfile.database
    container_name: getting-started-db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: todos_db
      MYSQL_USER: todos_user
      MYSQL_PASSWORD: todos_password
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -uroot -proot_password --silent",
        ]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 30s
    volumes:
      - db-data:/var/lib/mysql

volumes:
  db-data:
    driver: local

networks:
  default:
    name: getting-started-network
    driver: bridge
